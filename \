extern crate sdl2;
use sdl2::pixels::Color;
use sdl2::render::WindowCanvas;
use sdl2::video::Window;

pub struct Renderer {
    canvas: WindowCanvas,
}

impl Renderer {
    pub fn new(window: Window) -> Result<Renderer, String> {
        let canvas = window.into_canvas().build().map_err(|e| e.to_string())?;
        Ok(Renderer { canvas })
    }

    fn flip_bit(&mut self, pixel: &Pixel) {
        self.canvas.set_draw_color(Color::BLACK);
        let color = if pixel.on {
            self.canvas.set_draw_color(Color::WHITE);
        }
        self.canvas.fill_rect(Rect::new(

        ));
    }
}
